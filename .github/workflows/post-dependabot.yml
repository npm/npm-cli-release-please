# This file is automatically added by @npmcli/template-oss. Do not edit.

name: Post Dependabot

on:
  pull_request:
    branches:
      - main
      - latest
      - release/v*

jobs:
  dependency:
    name: "@npmcli/template-oss"
    permissions:
      contents: write
    outputs:
      sha: ${{ steps.sha.outputs.sha }}
    # TODO: remove head_ref check after testing
    if: github.repository_owner == 'npm' && (github.actor == 'dependabot[bot]' || contains(github.head_ref, '/npm-cli/template-oss'))
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Fetch Dependabot Metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # TODO: remove step after testing
      - name: Fake Dependabot Metadata
        id: fake-metadata
        if: steps.metadata.outcome == 'failure'
        run: |
          echo "dependency-names=@npmcli/template-oss" >> $GITHUB_OUTPUT
          echo "directory=/" >> $GITHUB_OUTPUT
          echo "update-type=version-update:semver-patch" >> $GITHUB_OUTPUT

      - name: Is Dependency
        if: contains(steps.metadata.outputs.dependency-names || steps.fake-metadata.outputs.dependency-names, '@npmcli/template-oss')
        id: dependency
        run: echo "continue=true" >> $GITHUB_OUTPUT

      - name: Checkout
        if: steps.dependency.outputs.continue
        uses: actions/checkout@v3
        with:
          ref: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.ref) || '' }}

      - name: Setup
        if: steps.dependency.outputs.continue
        uses: ./.github/actions/setup

      - name: Get Workspaces
        if: steps.dependency.outputs.continue
        uses: ./.github/actions/changed-workspaces
        id: workspaces
        with:
          files: '["${{ steps.metadata.outputs.directory || steps.fake-metadata.outputs.directory }}"]'

      # This only sets the conventional commit prefix. This workflow can't reliably determine
      # what the breaking change is though. If a BREAKING CHANGE message is required then
      # this PR check will fail and the commit will be amended with stafftools
      - name: Apply Changes
        if: steps.workspaces.outputs.flags
        id: apply
        run: |
          npm run template-oss-apply ${{ steps.workspaces.outputs.flags }}
          if [[ `git status --porcelain` ]]; then
            if [[ "${{ steps.metadata.outputs.update-type || steps.fake-metadata.outputs.update-type }}" == "version-update:semver-major" ]]; then
              prefix='feat!'
            else
              prefix='chore'
            fi
            echo "message=$prefix: postinstall for dependabot template-oss PR" >> $GITHUB_OUTPUT
          fi

      # This step will fail if template-oss has made any workflow updates. It is impossible
      # for a workflow to update other workflows. In the case it does fail, we continue
      # and then try to apply only a portion of the changes in the next step
      - name: Push All Changes
        if: steps.apply.outputs.message
        id: push
        continue-on-error: true
        run: |
          git commit -am "${{ steps.apply.outputs.message }}"
          git push

      # If the previous step failed, then reset the commit and remove any workflow changes
      # and attempt to commit and push again. This is helpful because we will have a commit
      # with the correct prefix that we can then --amend with @npmcli/stafftools later.
      - name: Push All Changes Except Workflows
        if: steps.apply.outputs.message && steps.push.outcome == 'failure'
        id: push-on-error
        continue-on-error: true
        run: |
          git reset HEAD~
          git checkout HEAD -- .github/workflows/
          git clean -fd .github/workflows/
          git commit -am "${{ steps.apply.outputs.message }}"
          git push

      # If template-oss is applying breaking changes, then we fail this PR with a message saying what to do. There's no need
      # to run CI in this case because the PR will need to be fixed manually so CI will run on those commits.
      - name: Fail on Breaking Change
        if: startsWith(steps.apply.outputs.message, 'feat!')
        run: |
          TITLE="Breaking Changes"
          MESSAGE="This PR has a breaking change. Run 'npx -p @npmcli/stafftools gh template-oss-fix'"
          MESSAGE="$MESSAGE for more information on how to fix this with a BREAKING CHANGE footer."
          echo "::error title=$TITLE::$MESSAGE"
          exit 1

      - name: Get SHA
        id: sha
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  # If everything succeeded so far then we run our normal CI workflow since GitHub actions wont rerun after a bot
  # pushes a new commit to a PR. We rerun all of CI because template-oss could affect any code in the repo including
  # lint settings and test settings.
  ci:
    name: CI
    needs: [ dependency ]
    if: needs.dependency.outputs.sha
    uses: ./.github/workflows/ci.yml
    with:
      ref: ${{ github.head_ref }}
      check-sha: ${{ needs.dependency.outputs.sha }}
      force: true

  codeql-analysis:
    name: CodeQL
    needs: [ dependency ]
    if: needs.dependency.outputs.sha
    uses: ./.github/workflows/codeql-analysis.yml
    with:
      ref: ${{ github.head_ref }}
      check-sha: ${{ needs.dependency.outputs.sha }}
      force: true

  pull-request:
    name: Pull Request
    needs: [ dependency ]
    if: needs.dependency.outputs.sha
    uses: ./.github/workflows/pull-request.yml
    with:
      ref: ${{ github.head_ref }}
      check-sha: ${{ needs.dependency.outputs.sha }}
      force: true
